

<!--
DA  v1.1
2020-10-23
Near
-->

@@section Pageheader{
    <h1>
        <small> @Model.Name</small>

    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">@Model.Name</li>
    </ol>

}



<section class="content" id="tab">
    <div class="row">

        <!-- /.col -->
        <div>
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">List</h3>

                    <div class="box-tools">

                        <div class="input-group input-group-sm  col-md-1 pull-right ml-1" style="margin-left:10px;">
                            <button type="button" class="btn btn-default pull-right"  v-on:click="ShowAdd()" id="btn_Search">添加</button>
                        </div>


                     <div class="input-group input-group-sm hidden-xs  pull-right" style="width: 200px;">
                            <input type="text" name="table_search" class="form-control pull-right" placeholder="Search" id="txt_Search" v-model="keywork"  v-on:keyup.13="Search" />

                            <div class="input-group-btn">
                                <button type="button" class="btn btn-default "  v-on:click="Search()" id="btn_Search"><i class="fa fa-search"></i></button>
                            </div>

                        </div>

                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body table-responsive no-padding">


                       <el-table ref="multipleTable"
                              :data="list"
                              stripe
                              tooltip-effect="dark"
                              style="width: 100%"
                              @@@selection-change="handleSelectionChange">




                        <el-table-column type="selection" width="40" align="center"></el-table-column>
                        
                            @foreach (var item in @Model.Columns)
                             {
                                 <el-table-column prop="@(item.CaseCamelName)" label="@(item.CaseCamelName)" show-overflow-tooltip> </el-table-column>
                             }
                        

                        <el-table-column label="操作" width="170" align="center">
                            <template slot-scope="scope">
                                <button type="button" class="btn bg-orange btn-xs" v-on:click="ShowUpdate(scope.row)" style="margin-left:4px">修改</button>
                                <button type="button" class="btn bg-red btn-xs" v-on:click="Delete(scope.row)" style="margin-left:4px">删除</button>
                            </template>
                        </el-table-column>


                    </el-table>

                   
                </div>
                <!-- /.box-body -->


                <div class="box-footer no-padding">
                    <div class="card-footer clearfix pull-left" style="margin-left:20px;margin-top:30px;margin-bottom:30px">
                     
                    </div>

                    <div class="card-footer clearfix pull-right " style="margin-right:30px;margin-top:30px;margin-bottom:30px" id="div_page">

                       <el-pagination @@@current-change="Init(pageModel.pageIndex)"
                                       :current-page.sync="pageModel.pageIndex"
                                       :page-size="pageModel.pageSize"
                                       background
                                       layout="total, prev, pager, next"
                                       :total="pageModel.TotalCount">
                        </el-pagination>
                    </div>


                    <!-- /.pull-right -->
                </div>
            </div>
        </div>


    </div>
    <!-- /.col -->
    <!-- /.row -->


 <el-dialog  :title="operation" :visible.sync="dialogFormVisible">
  <el-form :model="info">
    
       @foreach (var item in @Model.Columns)
      {
    
             <el-form-item label="@(item.CaseCamelName)" :label-width="formLabelWidth">
               <el-input v-model="info.@item.CaseCamelName" autocomplete="off"></el-input>
             </el-form-item>

       }
  </el-form>
  <div slot="footer" class="dialog-footer">
    <el-button @@click="dialogFormVisible = false">取 消</el-button>
    <el-button type="primary" @@@click="Add" v-if="operation=='add'">确 定</el-button>
    <el-button type="primary" @@@click="Update" v-if="operation=='update'">确 定</el-button>
  </div>
</el-dialog>

</section>




@@section scripts{

    <script>

       var self;
       var vm = new Vue({
           el: "#tab",
           data: {
               list: [],
               pageModel: {
                    pageIndex: 1,
                    pageSize: 15,
                    TotalCount: 0,
                    ToTalPage: 0,
                },
               operation: "add",
               dialogFormVisible: false,
               formLabelWidth: '120px',
               info: {},
               keywork: ""
           },
           created: function () {
               self=this;
               self.Init(1);

           },
           mounted: function () {


           },
           methods: {

               Init(index) {
                  

                   MyAjax({
                       url: "/@Model.Name/List",
                       type: "POST",
                       data: {
                            pageIndex: index,
                            pageSize: self.pageModel.pageSize,
                            keyword: self.keywork,
                       },
                       success: function (result) {

                       // console.log(JSON.stringify(result));

                           if (!result.Success) {

                               self.$message.error(result.Message);
                               return;
                           }
                          
                            self.list = result.Content;

                            self.pageModel.pageIndex = result.PageIndex;
                            self.pageModel.pageSize = result.PageSize;
                            self.pageModel.TotalCount = result.TotalCount;
                            self.pageModel.ToTalPage = result.ToTalPage;
                       }
                   })
               },

               Delete: function (item) {

                   bootbox.confirm("您确定删除该记录吗？", function (res) {
                       if (res) {

                           MyAjax({
                               url: "/@Model.Name/Del",
                               type: "POST",
                               data: {
                                   id: item.Id
                               },
                               success: function (result) {

                                   if (!result.Success) {

                                       self.$message.error(result.Message);
                                       return;
                                   }
                                   self.$message.success("删除成功");
                                   self.Init(self.pageModel.pageIndex);

                               }
                           })
                       }
                   });



               },
               Add: function () {

                   MyAjax({
                       url: "/@Model.Name/Add",
                       type: "POST",
                       data: self.info,
                       success: function (result) {

                           if (!result.Success) {

                                 self.$message.error(result.Message);
                               return;
                           }
                            self.dialogFormVisible=false;
                             self.$message.success(result.Message);
                            self.Init(self.pageModel.pageIndex);

                       }
                   })
               },
               Update: function () {
                   MyAjax({
                       url: "/@Model.Name/Update",
                       type: "POST",
                       data: self.info,
                       success: function (result) {

                           if (!result.Success) {

                           
                                 self.$message.error(result.Message);
                               return;
                           }
                         self.dialogFormVisible=false;
                         self.$message.success(result.Message);
                           self.Init(self.pageModel.pageIndex);

                       }
                   })

               },
               ShowUpdate: function (item) {
                   self.operation = "update";
                   self.dialogFormVisible=true;
                   self.info = item;

               },
               ShowAdd() {

                   self.operation = "add";
                   self.info = {};
                  self.dialogFormVisible=true;
                   
                 
               },
                Search: function () {
                    self.Init(1);
                },
            
              
              
           },



       });


    </script>

}